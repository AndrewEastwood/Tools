/** Simple version of jQuery.extend(false, target, args..) since jQuery hasn't loaded yet. */
exports.extend = function (target /*, args...*/) {
    var source, key, value, i;
    for (i = 1; i < arguments.length; i++) {
        if ((source = arguments[i]) != null) {
            for (key in source) {
                if ((value = source[key]) !== undefined) {
                    target[key] = value;
                }
            }
        }
    }
    return target;
}

exports.isNumber = function(n) {
  return !isNaN(parseFloat(n)) && isFinite(n);
}

exports.getArgValue = function (val) { return val; }

exports.getPublicCommands = function (object) {
    var spacer = "\n" + Array(25).join(" ");
    return spacer + Object.getOwnPropertyNames(object).join(spacer) + "\n";    
}

exports.exitHook = function () { 
    console.log("\nexit");
    process.exit();
}

/**
 * Format date as a string
 * @param date - a date object (usually "new Date();")
 * @param format - a string format, eg. "DD-MM-YYYY"
 */
exports.dateFormat = function (date, format) {
    // Calculate date parts and replace instances in format string accordingly
    format = format.replace("DD", (date.getDate() < 10 ? '0' : '') + date.getDate()); // Pad with '0' if needed
    format = format.replace("MM", (date.getMonth() < 9 ? '0' : '') + (date.getMonth() + 1)); // Months are zero-based
    format = format.replace("YYYY", date.getFullYear());
    return format;
}

exports.getDateAndFirstDayOfMonth = function (format) {
    var currentDT = new Date();
    var firstDayOfMonth = new Date(currentDT.getFullYear(), currentDT.getMonth(), 1);
    if (format)
        return exports.dateFormat(firstDayOfMonth, format);
    return firstDayOfMonth;
}

exports.getDateAndLastDayOfMonth = function (format) {
    var currentDT = new Date();
    var lastDayOfMonth = new Date(currentDT.getFullYear(), currentDT.getMonth() + 1, 0);
    if (format)
        return exports.dateFormat(lastDayOfMonth, format);
    return lastDayOfMonth;
}

exports.getDateAndAdjustDays = function (days, format) {
    var currentDT = new Date();
    var adjustedDate = new Date(currentDT.getFullYear(), currentDT.getMonth(), currentDT.getDate() + days);
    if (format)
        return exports.dateFormat(adjustedDate, format);
    return adjustedDate;
};